select current_database()

select current_schema()

set search_path to test_schema

select * from users

select * from orders

truncate table orders

truncate table users,orders

CREATE TABLE users (
    id int PRIMARY KEY,
    name VARCHAR(100),
    age INT
);
INSERT INTO users (id,name, age) VALUES
(1,'Alice', 25),
(2,'Bob', 30),
(3,'Charlie', 35),
(4,'David', 40),
(5,'Eve', 45);

CREATE TABLE orders (
    order_id int primary key,
    user_id INT REFERENCES users(id),
    product_name VARCHAR(100),
    amount DECIMAL(10,2),
    order_date DATE
);

INSERT INTO orders (order_id,user_id, product_name, amount, order_date) VALUES
-- (1,5, 'Laptop', 1200.50, '2024-10-01'),
(2,4, 'Phone', 800.00, '2024-10-05'),
(3,3, 'Mouse', 25.00, '2024-10-08'),
(4,2, 'Keyboard', 45.99, '2024-10-10'),
(5,1, 'Monitor', 200.00, '2024-10-15');




create or replace function add_numbers(a int,b int)
returns  int as $$
begin
return a+b;
end;
$$ language plpgsql



drop table users
drop table orders


-- triggers

create or replace function  add_data()
returns trigger as $$
begin 
insert into orders(order_id,user_id,product_name,amount,order_date)
values(new.id+1000,new.id,'gold',50000,current_date);
return new;
end;
$$ language plpgsql;


create trigger after_data_additon
after insert on users
for each row
execute function add_data()

insert into users
values(9,'navaneeth',null)

DELETE FROM orders WHERE user_id IN (SELECT id FROM users WHERE age IS NULL);
DELETE FROM users WHERE age IS NULL;

-- SELECT pg_get_serial_sequence('users', 'id');



alter table users
alter column age set not null

alter table users
alter column age drop not null

select count(*) from orders

select * from users

select * from orders
alter table orders rename to orders;

